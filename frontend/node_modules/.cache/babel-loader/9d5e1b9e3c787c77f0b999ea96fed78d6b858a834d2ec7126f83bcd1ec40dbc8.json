{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import apiClient from'../services/apiClient';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[isAuthenticated,setIsAuthenticated]=useState(false);useEffect(()=>{// Check if user is already logged in\nconst checkAuth=async()=>{try{const token=localStorage.getItem('authToken');if(token){const userData=await apiClient.getCurrentUser();setUser(userData);setIsAuthenticated(true);}}catch(error){console.error('Auth check failed:',error);// Clear invalid token\nlocalStorage.removeItem('authToken');apiClient.setToken(null);}finally{setLoading(false);}};checkAuth();},[]);const login=async(email,password)=>{try{const response=await apiClient.login(email,password);setUser(response.user);setIsAuthenticated(true);return response;}catch(error){console.error('Login failed:',error);throw error;}};const register=async userData=>{try{const response=await apiClient.register(userData);// After registration, you might want to auto-login\nreturn response;}catch(error){console.error('Registration failed:',error);throw error;}};const logout=async()=>{try{await apiClient.logout();setUser(null);setIsAuthenticated(false);}catch(error){console.error('Logout failed:',error);}};const value={user,isAuthenticated,loading,login,register,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiClient","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","checkAuth","token","localStorage","getItem","userData","getCurrentUser","error","console","removeItem","setToken","login","email","password","response","register","logout","value","Provider"],"sources":["F:/Projects/Automation Dashboard/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport apiClient from '../services/apiClient';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    const checkAuth = async () => {\r\n      try {\r\n        const token = localStorage.getItem('authToken');\r\n        if (token) {\r\n          const userData = await apiClient.getCurrentUser();\r\n          setUser(userData);\r\n          setIsAuthenticated(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth check failed:', error);\r\n        // Clear invalid token\r\n        localStorage.removeItem('authToken');\r\n        apiClient.setToken(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await apiClient.login(email, password);\r\n      setUser(response.user);\r\n      setIsAuthenticated(true);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await apiClient.register(userData);\r\n      // After registration, you might want to auto-login\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await apiClient.logout();\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n    } catch (error) {\r\n      console.error('Logout failed:', error);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,MAAO,CAAAC,SAAS,KAAM,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9C,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAQ,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGR,UAAU,CAACM,WAAW,CAAC,CACvC,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACgB,eAAe,CAAEC,kBAAkB,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CAE7DC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAiB,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAC/C,GAAIF,KAAK,CAAE,CACT,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAApB,SAAS,CAACqB,cAAc,CAAC,CAAC,CACjDV,OAAO,CAACS,QAAQ,CAAC,CACjBL,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CACF,CAAE,MAAOO,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1C;AACAJ,YAAY,CAACM,UAAU,CAAC,WAAW,CAAC,CACpCxB,SAAS,CAACyB,QAAQ,CAAC,IAAI,CAAC,CAC1B,CAAC,OAAS,CACRZ,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDG,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAU,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACvC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAA7B,SAAS,CAAC0B,KAAK,CAACC,KAAK,CAAEC,QAAQ,CAAC,CACvDjB,OAAO,CAACkB,QAAQ,CAACnB,IAAI,CAAC,CACtBK,kBAAkB,CAAC,IAAI,CAAC,CACxB,MAAO,CAAAc,QAAQ,CACjB,CAAE,MAAOP,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrC,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAAQ,QAAQ,CAAG,KAAO,CAAAV,QAAQ,EAAK,CACnC,GAAI,CACF,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAA7B,SAAS,CAAC8B,QAAQ,CAACV,QAAQ,CAAC,CACnD;AACA,MAAO,CAAAS,QAAQ,CACjB,CAAE,MAAOP,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAAS,MAAM,CAAG,KAAAA,CAAA,GAAY,CACzB,GAAI,CACF,KAAM,CAAA/B,SAAS,CAAC+B,MAAM,CAAC,CAAC,CACxBpB,OAAO,CAAC,IAAI,CAAC,CACbI,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CAAE,MAAOO,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACxC,CACF,CAAC,CAED,KAAM,CAAAU,KAAK,CAAG,CACZtB,IAAI,CACJI,eAAe,CACfF,OAAO,CACPc,KAAK,CACLI,QAAQ,CACRC,MACF,CAAC,CAED,mBACE7B,IAAA,CAACC,WAAW,CAAC8B,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAvB,QAAA,CAChCA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}