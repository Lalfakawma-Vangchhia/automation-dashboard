{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\Automation Dashboard\\\\frontend\\\\src\\\\components\\\\InstagramPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport apiClient from '../services/apiClient';\nimport facebookSDK from '../services/facebookSDK';\nimport './SocialMediaPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InstagramPage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    logout\n  } = useAuth();\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('');\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const [availableAccounts, setAvailableAccounts] = useState([]);\n  const [instagramConnected, setInstagramConnected] = useState(false);\n  const [activeTab, setActiveTab] = useState('auto');\n  const [cardFlipped, setCardFlipped] = useState(false);\n  const [isAlreadyLoggedIn, setIsAlreadyLoggedIn] = useState(false);\n\n  // Auto post states\n  const [autoFormData, setAutoFormData] = useState({\n    prompt: '',\n    imageUrl: '',\n    generatedContent: '',\n    isGenerating: false\n  });\n\n  // Manual post states\n  const [manualFormData, setManualFormData] = useState({\n    caption: '',\n    imageUrl: ''\n  });\n\n  // Publishing state\n  const [isPublishing, setIsPublishing] = useState(false);\n\n  // Check if user is already logged in to Facebook on component mount\n  useEffect(() => {\n    checkExistingFacebookLogin();\n  }, []);\n  const checkExistingFacebookLogin = async () => {\n    try {\n      setConnectionStatus('🔍 Checking existing Facebook connection...');\n      const isLoggedIn = await facebookSDK.isLoggedIn();\n      if (isLoggedIn) {\n        const accessToken = facebookSDK.getCurrentAccessToken();\n        if (accessToken) {\n          setIsAlreadyLoggedIn(true);\n          setConnectionStatus('✅ Found existing Facebook login! Click below to connect Instagram accounts.');\n        } else {\n          setConnectionStatus('');\n        }\n      } else {\n        setConnectionStatus('');\n      }\n    } catch (error) {\n      console.error('Error checking existing login:', error);\n      setConnectionStatus('');\n    }\n  };\n\n  // Icon Components\n  const MediaIcon = ({\n    type\n  }) => {\n    switch (type) {\n      case 'photo':\n        return /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            x: \"3\",\n            y: \"3\",\n            width: \"18\",\n            height: \"18\",\n            rx: \"2\",\n            ry: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"8.5\",\n            cy: \"8.5\",\n            r: \"1.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n            points: \"21,15 16,10 5,21\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this);\n    }\n  };\n\n  // Fetch Instagram accounts function using shared SDK\n  const fetchInstagramAccounts = async accessToken => {\n    if (!accessToken) {\n      setConnectionStatus('❌ No Facebook access token found. Please try reconnecting.');\n      setIsConnecting(false);\n      setInstagramConnected(false);\n      return {\n        mappedAccounts: [],\n        userInfo: null\n      };\n    }\n    try {\n      var _permissionsResponse$;\n      // Check permissions using shared SDK\n      const permissionsResponse = await facebookSDK.api('/me/permissions', {\n        access_token: accessToken\n      });\n      const grantedPermissions = ((_permissionsResponse$ = permissionsResponse.data) === null || _permissionsResponse$ === void 0 ? void 0 : _permissionsResponse$.filter(p => p.status === 'granted').map(p => p.permission)) || [];\n      const requiredPermissions = ['instagram_basic', 'instagram_content_publish', 'pages_show_list'];\n      const missingPermissions = requiredPermissions.filter(p => !grantedPermissions.includes(p));\n      if (missingPermissions.length > 0) {\n        setConnectionStatus(`❌ Missing permissions: ${missingPermissions.join(', ')}. Your app needs Instagram permissions.`);\n        console.error('[fetchInstagramAccounts] Missing required permissions:', missingPermissions);\n      }\n\n      // Get user info using shared SDK\n      const userInfo = await facebookSDK.api('/me', {\n        access_token: accessToken,\n        fields: 'id,name,email'\n      });\n\n      // Get Facebook pages with Instagram accounts using shared SDK\n      const pagesResponse = await facebookSDK.api('/me/accounts', {\n        access_token: accessToken,\n        fields: 'id,name,instagram_business_account{id,username,profile_picture_url,followers_count,media_count}'\n      });\n      const pages = pagesResponse.data || [];\n      const pagesWithInstagram = pages.filter(page => page.instagram_business_account);\n      if (pagesWithInstagram.length === 0) {\n        setConnectionStatus('❌ No Instagram Business accounts found. Please connect an Instagram Business account to a Facebook Page first.');\n        setIsConnecting(false);\n        setInstagramConnected(false);\n        return {\n          mappedAccounts: [],\n          userInfo\n        };\n      }\n      const mappedAccounts = pagesWithInstagram.map(page => {\n        const igAccount = page.instagram_business_account;\n        return {\n          id: igAccount.id,\n          username: igAccount.username,\n          profile_picture_url: igAccount.profile_picture_url || '',\n          followers_count: igAccount.followers_count || 0,\n          media_count: igAccount.media_count || 0,\n          account_type: 'BUSINESS',\n          page_id: page.id,\n          page_name: page.name,\n          access_token: accessToken\n        };\n      });\n      setAvailableAccounts(mappedAccounts);\n\n      // Account selection logic\n      if (mappedAccounts.length === 1) {\n        setSelectedAccount(mappedAccounts[0]);\n        setConnectionStatus(`✅ Connected successfully! Instagram account: @${mappedAccounts[0].username}`);\n      } else if (mappedAccounts.length > 1) {\n        setSelectedAccount(null);\n        setConnectionStatus(`✅ Connected successfully! ${mappedAccounts.length} Instagram accounts found. Please select an account below.`);\n      }\n      setInstagramConnected(true);\n      setCardFlipped(true);\n      setIsConnecting(false);\n      return {\n        mappedAccounts,\n        userInfo\n      };\n    } catch (error) {\n      console.error('Instagram API error:', error);\n      setConnectionStatus('❌ Failed to get Instagram data: ' + (error.message || 'Unknown error'));\n      setIsConnecting(false);\n      setInstagramConnected(false);\n      return {\n        mappedAccounts: [],\n        userInfo: null\n      };\n    }\n  };\n\n  // Connect to backend\n  const connectToBackend = async (accessToken, userInfo, mappedAccounts) => {\n    try {\n      const response = await apiClient.connectInstagram(accessToken, userInfo === null || userInfo === void 0 ? void 0 : userInfo.id, mappedAccounts);\n      setConnectionStatus('✅ Successfully connected Instagram to backend!');\n      return response;\n    } catch (error) {\n      console.error('Backend connection error:', error);\n      setConnectionStatus('❌ Backend connection failed: ' + (error.message || 'Unknown error'));\n      throw error;\n    }\n  };\n  const handleAutoInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAutoFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleManualInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setManualFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const generatePostContent = async () => {\n    if (!autoFormData.prompt.trim()) {\n      setConnectionStatus('❌ Please enter a prompt for content generation');\n      return;\n    }\n    setAutoFormData(prev => ({\n      ...prev,\n      isGenerating: true\n    }));\n    setConnectionStatus('🤖 Generating Instagram caption...');\n    try {\n      const response = await apiClient.generateContent(autoFormData.prompt);\n      if (response.success) {\n        setAutoFormData(prev => ({\n          ...prev,\n          generatedContent: response.content,\n          isGenerating: false\n        }));\n        setConnectionStatus('✅ Content generated successfully! Review and publish below.');\n      } else {\n        throw new Error(response.error || 'Failed to generate content');\n      }\n    } catch (error) {\n      console.error('Content generation error:', error);\n      setConnectionStatus('❌ Failed to generate content: ' + error.message);\n      setAutoFormData(prev => ({\n        ...prev,\n        isGenerating: false\n      }));\n    }\n  };\n  const publishPost = async () => {\n    if (!selectedAccount) {\n      setConnectionStatus('❌ Please select an Instagram account first');\n      return;\n    }\n    let caption, imageUrl;\n    if (activeTab === 'auto') {\n      if (!autoFormData.prompt.trim()) {\n        setConnectionStatus('❌ Please enter a prompt for content generation');\n        return;\n      }\n      if (!autoFormData.imageUrl.trim()) {\n        setConnectionStatus('❌ Please enter an image URL for Instagram post');\n        return;\n      }\n      caption = autoFormData.prompt;\n      imageUrl = autoFormData.imageUrl;\n    } else {\n      if (!manualFormData.caption.trim()) {\n        setConnectionStatus('❌ Please enter a caption');\n        return;\n      }\n      if (!manualFormData.imageUrl.trim()) {\n        setConnectionStatus('❌ Please enter an image URL for Instagram post');\n        return;\n      }\n      caption = manualFormData.caption;\n      imageUrl = manualFormData.imageUrl;\n    }\n    try {\n      setIsPublishing(true);\n      setConnectionStatus('🚀 Publishing to Instagram...');\n      const response = await apiClient.createInstagramPost(selectedAccount.id, caption, imageUrl, activeTab === 'auto' ? 'post-auto' : 'post-manual');\n      if (response.success) {\n        setConnectionStatus(`✅ Post published successfully to @${selectedAccount.username}!`);\n\n        // Clear form data\n        if (activeTab === 'auto') {\n          setAutoFormData({\n            prompt: '',\n            imageUrl: '',\n            generatedContent: '',\n            isGenerating: false\n          });\n        } else {\n          setManualFormData({\n            caption: '',\n            imageUrl: ''\n          });\n        }\n      } else {\n        throw new Error(response.message || 'Failed to publish post');\n      }\n    } catch (error) {\n      console.error('Post publishing error:', error);\n      setConnectionStatus('❌ Failed to publish post: ' + error.message);\n    } finally {\n      setIsPublishing(false);\n    }\n  };\n  const loginWithInstagram = async () => {\n    // Check HTTPS requirement\n    if (window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {\n      setConnectionStatus('❌ Instagram login requires HTTPS. Please use https://localhost:3001 or deploy with HTTPS');\n      return;\n    }\n\n    // Check backend authentication\n    try {\n      await apiClient.getCurrentUser();\n    } catch (error) {\n      setConnectionStatus('❌ Your session has expired. Please log out and log back in to connect Instagram.');\n      setTimeout(() => {\n        navigate('/');\n      }, 3000);\n      return;\n    }\n    setIsConnecting(true);\n    try {\n      let accessToken;\n\n      // Check if already logged in to Facebook\n      if (isAlreadyLoggedIn) {\n        setConnectionStatus('🔄 Using existing Facebook login for Instagram...');\n        accessToken = facebookSDK.getCurrentAccessToken();\n        if (!accessToken) {\n          // Force new login if no token available\n          setIsAlreadyLoggedIn(false);\n          throw new Error('No access token available from existing login');\n        }\n      } else {\n        setConnectionStatus('🔐 Connecting to Instagram via Facebook...');\n\n        // Required scopes for Instagram\n        const instagramScopes = ['pages_show_list', 'instagram_basic', 'instagram_manage_comments', 'instagram_manage_insights', 'instagram_content_publish', 'pages_read_engagement'];\n        const response = await facebookSDK.login(instagramScopes);\n        accessToken = response.authResponse.accessToken;\n      }\n      setConnectionStatus('✅ Facebook login successful! Checking Instagram accounts...');\n\n      // Fetch Instagram accounts\n      const {\n        mappedAccounts,\n        userInfo\n      } = await fetchInstagramAccounts(accessToken);\n      if (mappedAccounts.length > 0) {\n        // Connect to backend\n        await connectToBackend(accessToken, userInfo, mappedAccounts);\n        setConnectionStatus(`✅ Successfully connected ${mappedAccounts.length} Instagram account(s)!`);\n      }\n    } catch (error) {\n      console.error('Instagram login error:', error);\n      if (error.message.includes('User denied authorization')) {\n        setConnectionStatus('❌ Please authorize the app to continue and ensure you have Instagram Business accounts linked to your Facebook Pages.');\n      } else {\n        setConnectionStatus('❌ Instagram login failed: ' + error.message);\n      }\n      setIsConnecting(false);\n      setInstagramConnected(false);\n    }\n  };\n  const handleAccountSelect = account => {\n    setSelectedAccount(account);\n    setConnectionStatus(`✅ Selected Instagram account: @${account.username}`);\n  };\n\n  // Handle logout\n  const handleLogout = async () => {\n    await logout();\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"social-media-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83D\\uDCF8 Instagram Automation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-btn\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-card-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `connection-card ${cardFlipped ? 'flipped' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-face card-front\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"platform-icon\",\n              children: \"\\uD83D\\uDCF8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Connect Instagram\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Connect your Instagram Business account to start automating posts with AI-generated content.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"features-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feature\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"feature-icon\",\n                  children: \"\\uD83E\\uDD16\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"AI-Generated Captions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feature\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"feature-icon\",\n                  children: \"\\uD83D\\uDCCA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Analytics & Insights\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feature\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"feature-icon\",\n                  children: \"\\u23F0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Smart Scheduling\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), isAlreadyLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"existing-login-notice\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"notice-icon\",\n                children: \"\\u2139\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Using existing Facebook login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: loginWithInstagram,\n              disabled: isConnecting,\n              className: \"connect-button\",\n              children: isConnecting ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading-spinner\",\n                children: \"\\u23F3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: isAlreadyLoggedIn ? 'Connect Instagram Accounts' : 'Connect Instagram'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this), connectionStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `status-message ${connectionStatus.includes('✅') ? 'success' : connectionStatus.includes('❌') ? 'error' : 'info'}`,\n              children: connectionStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-face card-back\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"connected-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"platform-icon\",\n                children: \"\\uD83D\\uDCF8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Instagram Connected!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this), availableAccounts.length > 1 && !selectedAccount && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"account-selection\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Select Instagram Account:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"accounts-grid\",\n                  children: availableAccounts.map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"account-card selectable\",\n                    onClick: () => handleAccountSelect(account),\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"account-info\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"account-avatar\",\n                        children: account.profile_picture_url ? /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: account.profile_picture_url,\n                          alt: account.username\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 465,\n                          columnNumber: 33\n                        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"avatar-placeholder\",\n                          children: \"\\uD83D\\uDCF8\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 467,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 463,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"account-details\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"account-name\",\n                          children: [\"@\", account.username]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 471,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"account-stats\",\n                          children: [account.followers_count.toLocaleString(), \" followers\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 472,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 470,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 462,\n                      columnNumber: 27\n                    }, this)\n                  }, account.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 19\n              }, this), selectedAccount && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-account\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"account-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"account-avatar\",\n                    children: selectedAccount.profile_picture_url ? /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: selectedAccount.profile_picture_url,\n                      alt: selectedAccount.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 489,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"avatar-placeholder\",\n                      children: \"\\uD83D\\uDCF8\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"account-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"account-name\",\n                      children: [\"@\", selectedAccount.username]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"account-stats\",\n                      children: [selectedAccount.followers_count.toLocaleString(), \" followers \\u2022 \", selectedAccount.media_count, \" posts\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this), instagramConnected && selectedAccount && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-interface\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tab-navigation\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `tab-button ${activeTab === 'auto' ? 'active' : ''}`,\n                  onClick: () => setActiveTab('auto'),\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tab-icon\",\n                    children: \"\\uD83E\\uDD16\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 23\n                  }, this), \"AI Generated\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `tab-button ${activeTab === 'manual' ? 'active' : ''}`,\n                  onClick: () => setActiveTab('manual'),\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tab-icon\",\n                    children: \"\\u270D\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 23\n                  }, this), \"Manual Post\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this), activeTab === 'auto' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-form auto-post\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(MediaIcon, {\n                      type: \"text\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 529,\n                      columnNumber: 27\n                    }, this), \"Describe your post idea\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    name: \"prompt\",\n                    value: autoFormData.prompt,\n                    onChange: handleAutoInputChange,\n                    placeholder: \"e.g., A beautiful sunset at the beach with golden hour lighting...\",\n                    rows: 3\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(MediaIcon, {\n                      type: \"photo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 27\n                    }, this), \"Image URL\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"url\",\n                    name: \"imageUrl\",\n                    value: autoFormData.imageUrl,\n                    onChange: handleAutoInputChange,\n                    placeholder: \"https://example.com/image.jpg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 23\n                }, this), autoFormData.generatedContent && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"generated-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Generated Caption:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"content-preview\",\n                    children: autoFormData.generatedContent\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: generatePostContent,\n                    disabled: autoFormData.isGenerating || !autoFormData.prompt.trim(),\n                    className: \"generate-button\",\n                    children: autoFormData.isGenerating ? '⏳ Generating...' : '🤖 Generate Caption'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 565,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: publishPost,\n                    disabled: isPublishing || !autoFormData.prompt.trim() || !autoFormData.imageUrl.trim(),\n                    className: \"publish-button\",\n                    children: isPublishing ? '⏳ Publishing...' : '🚀 Publish Post'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 21\n              }, this), activeTab === 'manual' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-form manual-post\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(MediaIcon, {\n                      type: \"text\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 588,\n                      columnNumber: 27\n                    }, this), \"Caption\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    name: \"caption\",\n                    value: manualFormData.caption,\n                    onChange: handleManualInputChange,\n                    placeholder: \"Write your Instagram caption here... #hashtags\",\n                    rows: 4\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 591,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(MediaIcon, {\n                      type: \"photo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 602,\n                      columnNumber: 27\n                    }, this), \"Image URL\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 601,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"url\",\n                    name: \"imageUrl\",\n                    value: manualFormData.imageUrl,\n                    onChange: handleManualInputChange,\n                    placeholder: \"https://example.com/image.jpg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-actions\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: publishPost,\n                    disabled: isPublishing || !manualFormData.caption.trim() || !manualFormData.imageUrl.trim(),\n                    className: \"publish-button\",\n                    children: isPublishing ? '⏳ Publishing...' : '📸 Publish to Instagram'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 17\n            }, this), connectionStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `status-message ${connectionStatus.includes('✅') ? 'success' : connectionStatus.includes('❌') ? 'error' : 'info'}`,\n              children: connectionStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 385,\n    columnNumber: 5\n  }, this);\n}\n_s(InstagramPage, \"SBE59U6KJfYwUt6gfqxN5L9pN5g=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = InstagramPage;\nexport default InstagramPage;\nvar _c;\n$RefreshReg$(_c, \"InstagramPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","apiClient","facebookSDK","jsxDEV","_jsxDEV","InstagramPage","_s","navigate","logout","isConnecting","setIsConnecting","connectionStatus","setConnectionStatus","selectedAccount","setSelectedAccount","availableAccounts","setAvailableAccounts","instagramConnected","setInstagramConnected","activeTab","setActiveTab","cardFlipped","setCardFlipped","isAlreadyLoggedIn","setIsAlreadyLoggedIn","autoFormData","setAutoFormData","prompt","imageUrl","generatedContent","isGenerating","manualFormData","setManualFormData","caption","isPublishing","setIsPublishing","checkExistingFacebookLogin","isLoggedIn","accessToken","getCurrentAccessToken","error","console","MediaIcon","type","width","height","viewBox","fill","stroke","strokeWidth","children","x","y","rx","ry","fileName","_jsxFileName","lineNumber","columnNumber","cx","cy","r","points","d","fetchInstagramAccounts","mappedAccounts","userInfo","_permissionsResponse$","permissionsResponse","api","access_token","grantedPermissions","data","filter","p","status","map","permission","requiredPermissions","missingPermissions","includes","length","join","fields","pagesResponse","pages","pagesWithInstagram","page","instagram_business_account","igAccount","id","username","profile_picture_url","followers_count","media_count","account_type","page_id","page_name","name","message","connectToBackend","response","connectInstagram","handleAutoInputChange","e","value","target","prev","handleManualInputChange","generatePostContent","trim","generateContent","success","content","Error","publishPost","createInstagramPost","loginWithInstagram","window","location","protocol","hostname","getCurrentUser","setTimeout","instagramScopes","login","authResponse","handleAccountSelect","account","handleLogout","className","onClick","disabled","src","alt","toLocaleString","onChange","placeholder","rows","_c","$RefreshReg$"],"sources":["F:/Projects/Automation Dashboard/frontend/src/components/InstagramPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport apiClient from '../services/apiClient';\r\nimport facebookSDK from '../services/facebookSDK';\r\nimport './SocialMediaPage.css';\r\n\r\nfunction InstagramPage() {\r\n  const navigate = useNavigate();\r\n  const { logout } = useAuth();\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [connectionStatus, setConnectionStatus] = useState('');\r\n  const [selectedAccount, setSelectedAccount] = useState(null);\r\n  const [availableAccounts, setAvailableAccounts] = useState([]);\r\n  const [instagramConnected, setInstagramConnected] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('auto');\r\n  const [cardFlipped, setCardFlipped] = useState(false);\r\n  const [isAlreadyLoggedIn, setIsAlreadyLoggedIn] = useState(false);\r\n  \r\n  // Auto post states\r\n  const [autoFormData, setAutoFormData] = useState({\r\n    prompt: '',\r\n    imageUrl: '',\r\n    generatedContent: '',\r\n    isGenerating: false\r\n  });\r\n  \r\n  // Manual post states\r\n  const [manualFormData, setManualFormData] = useState({\r\n    caption: '',\r\n    imageUrl: ''\r\n  });\r\n\r\n  // Publishing state\r\n  const [isPublishing, setIsPublishing] = useState(false);\r\n\r\n  // Check if user is already logged in to Facebook on component mount\r\n  useEffect(() => {\r\n    checkExistingFacebookLogin();\r\n  }, []);\r\n\r\n  const checkExistingFacebookLogin = async () => {\r\n    try {\r\n      setConnectionStatus('🔍 Checking existing Facebook connection...');\r\n      \r\n      const isLoggedIn = await facebookSDK.isLoggedIn();\r\n      if (isLoggedIn) {\r\n        const accessToken = facebookSDK.getCurrentAccessToken();\r\n        if (accessToken) {\r\n          setIsAlreadyLoggedIn(true);\r\n          setConnectionStatus('✅ Found existing Facebook login! Click below to connect Instagram accounts.');\r\n        } else {\r\n          setConnectionStatus('');\r\n        }\r\n      } else {\r\n        setConnectionStatus('');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking existing login:', error);\r\n      setConnectionStatus('');\r\n    }\r\n  };\r\n\r\n  // Icon Components\r\n  const MediaIcon = ({ type }) => {\r\n    switch(type) {\r\n      case 'photo':\r\n        return (\r\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n            <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/>\r\n            <circle cx=\"8.5\" cy=\"8.5\" r=\"1.5\"/>\r\n            <polyline points=\"21,15 16,10 5,21\"/>\r\n          </svg>\r\n        );\r\n      default:\r\n        return (\r\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n            <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"/>\r\n          </svg>\r\n        );\r\n    }\r\n  };\r\n\r\n  // Fetch Instagram accounts function using shared SDK\r\n  const fetchInstagramAccounts = async (accessToken) => {\r\n    if (!accessToken) {\r\n      setConnectionStatus('❌ No Facebook access token found. Please try reconnecting.');\r\n      setIsConnecting(false);\r\n      setInstagramConnected(false);\r\n      return { mappedAccounts: [], userInfo: null };\r\n    }\r\n    \r\n    try {\r\n      // Check permissions using shared SDK\r\n      const permissionsResponse = await facebookSDK.api('/me/permissions', { access_token: accessToken });\r\n      \r\n      const grantedPermissions = permissionsResponse.data?.filter(p => p.status === 'granted').map(p => p.permission) || [];\r\n      const requiredPermissions = ['instagram_basic', 'instagram_content_publish', 'pages_show_list'];\r\n      const missingPermissions = requiredPermissions.filter(p => !grantedPermissions.includes(p));\r\n      \r\n      if (missingPermissions.length > 0) {\r\n        setConnectionStatus(`❌ Missing permissions: ${missingPermissions.join(', ')}. Your app needs Instagram permissions.`);\r\n        console.error('[fetchInstagramAccounts] Missing required permissions:', missingPermissions);\r\n      }\r\n      \r\n      // Get user info using shared SDK\r\n      const userInfo = await facebookSDK.api('/me', { \r\n        access_token: accessToken, \r\n        fields: 'id,name,email' \r\n      });\r\n      \r\n      // Get Facebook pages with Instagram accounts using shared SDK\r\n      const pagesResponse = await facebookSDK.api('/me/accounts', {\r\n        access_token: accessToken,\r\n        fields: 'id,name,instagram_business_account{id,username,profile_picture_url,followers_count,media_count}'\r\n      });\r\n\r\n      const pages = pagesResponse.data || [];\r\n      const pagesWithInstagram = pages.filter(page => page.instagram_business_account);\r\n      \r\n      if (pagesWithInstagram.length === 0) {\r\n        setConnectionStatus('❌ No Instagram Business accounts found. Please connect an Instagram Business account to a Facebook Page first.');\r\n        setIsConnecting(false);\r\n        setInstagramConnected(false);\r\n        return { mappedAccounts: [], userInfo };\r\n      }\r\n\r\n      const mappedAccounts = pagesWithInstagram.map(page => {\r\n        const igAccount = page.instagram_business_account;\r\n        return {\r\n          id: igAccount.id,\r\n          username: igAccount.username,\r\n          profile_picture_url: igAccount.profile_picture_url || '',\r\n          followers_count: igAccount.followers_count || 0,\r\n          media_count: igAccount.media_count || 0,\r\n          account_type: 'BUSINESS',\r\n          page_id: page.id,\r\n          page_name: page.name,\r\n          access_token: accessToken\r\n        };\r\n      });\r\n\r\n      setAvailableAccounts(mappedAccounts);\r\n      \r\n      // Account selection logic\r\n      if (mappedAccounts.length === 1) {\r\n        setSelectedAccount(mappedAccounts[0]);\r\n        setConnectionStatus(`✅ Connected successfully! Instagram account: @${mappedAccounts[0].username}`);\r\n      } else if (mappedAccounts.length > 1) {\r\n        setSelectedAccount(null);\r\n        setConnectionStatus(`✅ Connected successfully! ${mappedAccounts.length} Instagram accounts found. Please select an account below.`);\r\n      }\r\n      \r\n      setInstagramConnected(true);\r\n      setCardFlipped(true);\r\n      setIsConnecting(false);\r\n      return { mappedAccounts, userInfo };\r\n    } catch (error) {\r\n      console.error('Instagram API error:', error);\r\n      setConnectionStatus('❌ Failed to get Instagram data: ' + (error.message || 'Unknown error'));\r\n      setIsConnecting(false);\r\n      setInstagramConnected(false);\r\n      return { mappedAccounts: [], userInfo: null };\r\n    }\r\n  };\r\n\r\n  // Connect to backend\r\n  const connectToBackend = async (accessToken, userInfo, mappedAccounts) => {\r\n    try {\r\n      const response = await apiClient.connectInstagram(\r\n        accessToken,\r\n        userInfo?.id,\r\n        mappedAccounts\r\n      );\r\n      setConnectionStatus('✅ Successfully connected Instagram to backend!');\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Backend connection error:', error);\r\n      setConnectionStatus('❌ Backend connection failed: ' + (error.message || 'Unknown error'));\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleAutoInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAutoFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleManualInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setManualFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const generatePostContent = async () => {\r\n    if (!autoFormData.prompt.trim()) {\r\n      setConnectionStatus('❌ Please enter a prompt for content generation');\r\n      return;\r\n    }\r\n\r\n    setAutoFormData(prev => ({ ...prev, isGenerating: true }));\r\n    setConnectionStatus('🤖 Generating Instagram caption...');\r\n\r\n    try {\r\n      const response = await apiClient.generateContent(autoFormData.prompt);\r\n      \r\n      if (response.success) {\r\n        setAutoFormData(prev => ({\r\n          ...prev,\r\n          generatedContent: response.content,\r\n          isGenerating: false\r\n        }));\r\n        setConnectionStatus('✅ Content generated successfully! Review and publish below.');\r\n      } else {\r\n        throw new Error(response.error || 'Failed to generate content');\r\n      }\r\n    } catch (error) {\r\n      console.error('Content generation error:', error);\r\n      setConnectionStatus('❌ Failed to generate content: ' + error.message);\r\n      setAutoFormData(prev => ({ ...prev, isGenerating: false }));\r\n    }\r\n  };\r\n\r\n  const publishPost = async () => {\r\n    if (!selectedAccount) {\r\n      setConnectionStatus('❌ Please select an Instagram account first');\r\n      return;\r\n    }\r\n\r\n    let caption, imageUrl;\r\n    \r\n    if (activeTab === 'auto') {\r\n      if (!autoFormData.prompt.trim()) {\r\n        setConnectionStatus('❌ Please enter a prompt for content generation');\r\n        return;\r\n      }\r\n      if (!autoFormData.imageUrl.trim()) {\r\n        setConnectionStatus('❌ Please enter an image URL for Instagram post');\r\n        return;\r\n      }\r\n      caption = autoFormData.prompt;\r\n      imageUrl = autoFormData.imageUrl;\r\n    } else {\r\n      if (!manualFormData.caption.trim()) {\r\n        setConnectionStatus('❌ Please enter a caption');\r\n        return;\r\n      }\r\n      if (!manualFormData.imageUrl.trim()) {\r\n        setConnectionStatus('❌ Please enter an image URL for Instagram post');\r\n        return;\r\n      }\r\n      caption = manualFormData.caption;\r\n      imageUrl = manualFormData.imageUrl;\r\n    }\r\n\r\n    try {\r\n      setIsPublishing(true);\r\n      setConnectionStatus('🚀 Publishing to Instagram...');\r\n\r\n      const response = await apiClient.createInstagramPost(\r\n        selectedAccount.id,\r\n        caption,\r\n        imageUrl,\r\n        activeTab === 'auto' ? 'post-auto' : 'post-manual'\r\n      );\r\n\r\n      if (response.success) {\r\n        setConnectionStatus(`✅ Post published successfully to @${selectedAccount.username}!`);\r\n        \r\n        // Clear form data\r\n        if (activeTab === 'auto') {\r\n          setAutoFormData({\r\n            prompt: '',\r\n            imageUrl: '',\r\n            generatedContent: '',\r\n            isGenerating: false\r\n          });\r\n        } else {\r\n          setManualFormData({\r\n            caption: '',\r\n            imageUrl: ''\r\n          });\r\n        }\r\n      } else {\r\n        throw new Error(response.message || 'Failed to publish post');\r\n      }\r\n    } catch (error) {\r\n      console.error('Post publishing error:', error);\r\n      setConnectionStatus('❌ Failed to publish post: ' + error.message);\r\n    } finally {\r\n      setIsPublishing(false);\r\n    }\r\n  };\r\n\r\n  const loginWithInstagram = async () => {\r\n    // Check HTTPS requirement\r\n    if (window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {\r\n      setConnectionStatus('❌ Instagram login requires HTTPS. Please use https://localhost:3001 or deploy with HTTPS');\r\n      return;\r\n    }\r\n\r\n    // Check backend authentication\r\n    try {\r\n      await apiClient.getCurrentUser();\r\n    } catch (error) {\r\n      setConnectionStatus('❌ Your session has expired. Please log out and log back in to connect Instagram.');\r\n      setTimeout(() => {\r\n        navigate('/');\r\n      }, 3000);\r\n      return;\r\n    }\r\n\r\n    setIsConnecting(true);\r\n\r\n    try {\r\n      let accessToken;\r\n      \r\n      // Check if already logged in to Facebook\r\n      if (isAlreadyLoggedIn) {\r\n        setConnectionStatus('🔄 Using existing Facebook login for Instagram...');\r\n        accessToken = facebookSDK.getCurrentAccessToken();\r\n        \r\n        if (!accessToken) {\r\n          // Force new login if no token available\r\n          setIsAlreadyLoggedIn(false);\r\n          throw new Error('No access token available from existing login');\r\n        }\r\n      } else {\r\n        setConnectionStatus('🔐 Connecting to Instagram via Facebook...');\r\n        \r\n        // Required scopes for Instagram\r\n        const instagramScopes = [\r\n          'pages_show_list',\r\n          'instagram_basic',\r\n          'instagram_manage_comments',\r\n          'instagram_manage_insights',\r\n          'instagram_content_publish',\r\n          'pages_read_engagement'\r\n        ];\r\n\r\n        const response = await facebookSDK.login(instagramScopes);\r\n        accessToken = response.authResponse.accessToken;\r\n      }\r\n\r\n      setConnectionStatus('✅ Facebook login successful! Checking Instagram accounts...');\r\n      \r\n      // Fetch Instagram accounts\r\n      const { mappedAccounts, userInfo } = await fetchInstagramAccounts(accessToken);\r\n      \r\n      if (mappedAccounts.length > 0) {\r\n        // Connect to backend\r\n        await connectToBackend(accessToken, userInfo, mappedAccounts);\r\n        setConnectionStatus(`✅ Successfully connected ${mappedAccounts.length} Instagram account(s)!`);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Instagram login error:', error);\r\n      if (error.message.includes('User denied authorization')) {\r\n        setConnectionStatus('❌ Please authorize the app to continue and ensure you have Instagram Business accounts linked to your Facebook Pages.');\r\n      } else {\r\n        setConnectionStatus('❌ Instagram login failed: ' + error.message);\r\n      }\r\n      setIsConnecting(false);\r\n      setInstagramConnected(false);\r\n    }\r\n  };\r\n\r\n  const handleAccountSelect = (account) => {\r\n    setSelectedAccount(account);\r\n    setConnectionStatus(`✅ Selected Instagram account: @${account.username}`);\r\n  };\r\n\r\n  // Handle logout\r\n  const handleLogout = async () => {\r\n    await logout();\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"social-media-page\">\r\n      <div className=\"page-header\">\r\n        <div className=\"header-content\">\r\n          <h1>📸 Instagram Automation</h1>\r\n          <button onClick={handleLogout} className=\"logout-btn\">\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"connection-card-container\">\r\n        <div className={`connection-card ${cardFlipped ? 'flipped' : ''}`}>\r\n          <div className=\"card-face card-front\">\r\n            <div className=\"card-content\">\r\n              <div className=\"platform-icon\">📸</div>\r\n              <h2>Connect Instagram</h2>\r\n              <p>Connect your Instagram Business account to start automating posts with AI-generated content.</p>\r\n              \r\n              <div className=\"features-list\">\r\n                <div className=\"feature\">\r\n                  <span className=\"feature-icon\">🤖</span>\r\n                  <span>AI-Generated Captions</span>\r\n                </div>\r\n                <div className=\"feature\">\r\n                  <span className=\"feature-icon\">📊</span>\r\n                  <span>Analytics & Insights</span>\r\n                </div>\r\n                <div className=\"feature\">\r\n                  <span className=\"feature-icon\">⏰</span>\r\n                  <span>Smart Scheduling</span>\r\n                </div>\r\n              </div>\r\n\r\n              {isAlreadyLoggedIn && (\r\n                <div className=\"existing-login-notice\">\r\n                  <span className=\"notice-icon\">ℹ️</span>\r\n                  <span>Using existing Facebook login</span>\r\n                </div>\r\n              )}\r\n\r\n              <button \r\n                onClick={loginWithInstagram}\r\n                disabled={isConnecting}\r\n                className=\"connect-button\"\r\n              >\r\n                {isConnecting ? (\r\n                  <span className=\"loading-spinner\">⏳</span>\r\n                ) : (\r\n                  <span>{isAlreadyLoggedIn ? 'Connect Instagram Accounts' : 'Connect Instagram'}</span>\r\n                )}\r\n              </button>\r\n\r\n              {connectionStatus && (\r\n                <div className={`status-message ${connectionStatus.includes('✅') ? 'success' : connectionStatus.includes('❌') ? 'error' : 'info'}`}>\r\n                  {connectionStatus}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"card-face card-back\">\r\n            <div className=\"card-content\">\r\n              <div className=\"connected-header\">\r\n                <div className=\"platform-icon\">📸</div>\r\n                <h2>Instagram Connected!</h2>\r\n                \r\n                {/* Account Selection */}\r\n                {availableAccounts.length > 1 && !selectedAccount && (\r\n                  <div className=\"account-selection\">\r\n                    <h3>Select Instagram Account:</h3>\r\n                    <div className=\"accounts-grid\">\r\n                      {availableAccounts.map((account) => (\r\n                        <div \r\n                          key={account.id} \r\n                          className=\"account-card selectable\"\r\n                          onClick={() => handleAccountSelect(account)}\r\n                        >\r\n                          <div className=\"account-info\">\r\n                            <div className=\"account-avatar\">\r\n                              {account.profile_picture_url ? (\r\n                                <img src={account.profile_picture_url} alt={account.username} />\r\n                              ) : (\r\n                                <div className=\"avatar-placeholder\">📸</div>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"account-details\">\r\n                              <div className=\"account-name\">@{account.username}</div>\r\n                              <div className=\"account-stats\">\r\n                                {account.followers_count.toLocaleString()} followers\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Selected Account Display */}\r\n                {selectedAccount && (\r\n                  <div className=\"selected-account\">\r\n                    <div className=\"account-info\">\r\n                      <div className=\"account-avatar\">\r\n                        {selectedAccount.profile_picture_url ? (\r\n                          <img src={selectedAccount.profile_picture_url} alt={selectedAccount.username} />\r\n                        ) : (\r\n                          <div className=\"avatar-placeholder\">📸</div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"account-details\">\r\n                        <div className=\"account-name\">@{selectedAccount.username}</div>\r\n                        <div className=\"account-stats\">\r\n                          {selectedAccount.followers_count.toLocaleString()} followers • {selectedAccount.media_count} posts\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Post Creation Interface */}\r\n              {instagramConnected && selectedAccount && (\r\n                <div className=\"post-interface\">\r\n                  <div className=\"tab-navigation\">\r\n                    <button \r\n                      className={`tab-button ${activeTab === 'auto' ? 'active' : ''}`}\r\n                      onClick={() => setActiveTab('auto')}\r\n                    >\r\n                      <span className=\"tab-icon\">🤖</span>\r\n                      AI Generated\r\n                    </button>\r\n                    <button \r\n                      className={`tab-button ${activeTab === 'manual' ? 'active' : ''}`}\r\n                      onClick={() => setActiveTab('manual')}\r\n                    >\r\n                      <span className=\"tab-icon\">✍️</span>\r\n                      Manual Post\r\n                    </button>\r\n                  </div>\r\n\r\n                  {activeTab === 'auto' && (\r\n                    <div className=\"post-form auto-post\">\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <MediaIcon type=\"text\" />\r\n                          Describe your post idea\r\n                        </label>\r\n                        <textarea\r\n                          name=\"prompt\"\r\n                          value={autoFormData.prompt}\r\n                          onChange={handleAutoInputChange}\r\n                          placeholder=\"e.g., A beautiful sunset at the beach with golden hour lighting...\"\r\n                          rows={3}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <MediaIcon type=\"photo\" />\r\n                          Image URL\r\n                        </label>\r\n                        <input\r\n                          type=\"url\"\r\n                          name=\"imageUrl\"\r\n                          value={autoFormData.imageUrl}\r\n                          onChange={handleAutoInputChange}\r\n                          placeholder=\"https://example.com/image.jpg\"\r\n                        />\r\n                      </div>\r\n\r\n                      {autoFormData.generatedContent && (\r\n                        <div className=\"generated-content\">\r\n                          <label>Generated Caption:</label>\r\n                          <div className=\"content-preview\">\r\n                            {autoFormData.generatedContent}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-actions\">\r\n                        <button \r\n                          onClick={generatePostContent}\r\n                          disabled={autoFormData.isGenerating || !autoFormData.prompt.trim()}\r\n                          className=\"generate-button\"\r\n                        >\r\n                          {autoFormData.isGenerating ? '⏳ Generating...' : '🤖 Generate Caption'}\r\n                        </button>\r\n\r\n                        <button \r\n                          onClick={publishPost}\r\n                          disabled={isPublishing || !autoFormData.prompt.trim() || !autoFormData.imageUrl.trim()}\r\n                          className=\"publish-button\"\r\n                        >\r\n                          {isPublishing ? '⏳ Publishing...' : '🚀 Publish Post'}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {activeTab === 'manual' && (\r\n                    <div className=\"post-form manual-post\">\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <MediaIcon type=\"text\" />\r\n                          Caption\r\n                        </label>\r\n                        <textarea\r\n                          name=\"caption\"\r\n                          value={manualFormData.caption}\r\n                          onChange={handleManualInputChange}\r\n                          placeholder=\"Write your Instagram caption here... #hashtags\"\r\n                          rows={4}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                        <label>\r\n                          <MediaIcon type=\"photo\" />\r\n                          Image URL\r\n                        </label>\r\n                        <input\r\n                          type=\"url\"\r\n                          name=\"imageUrl\"\r\n                          value={manualFormData.imageUrl}\r\n                          onChange={handleManualInputChange}\r\n                          placeholder=\"https://example.com/image.jpg\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"form-actions\">\r\n                        <button \r\n                          onClick={publishPost}\r\n                          disabled={isPublishing || !manualFormData.caption.trim() || !manualFormData.imageUrl.trim()}\r\n                          className=\"publish-button\"\r\n                        >\r\n                          {isPublishing ? '⏳ Publishing...' : '📸 Publish to Instagram'}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {connectionStatus && (\r\n                <div className={`status-message ${connectionStatus.includes('✅') ? 'success' : connectionStatus.includes('❌') ? 'error' : 'info'}`}>\r\n                  {connectionStatus}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InstagramPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}