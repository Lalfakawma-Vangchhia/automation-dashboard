{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\Automation Dashboard\\\\frontend\\\\src\\\\components\\\\SocialMediaPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './SocialMediaPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SocialMediaPage() {\n  _s();\n  const navigate = useNavigate();\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('');\n  const [hoveredCard, setHoveredCard] = useState(null);\n  const [pageAccessToken, setPageAccessToken] = useState('');\n  const [pages, setPages] = useState([]);\n  const [selectedPage, setSelectedPage] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [formData, setFormData] = useState({\n    message: ''\n  });\n  const WEBHOOK_URL = \"https://hook.eu2.make.com/m4f3qzhwhe4y62i9ghviwe4zw23hytio\";\n  useEffect(() => {\n    const loadFacebookSDK = () => {\n      return new Promise(resolve => {\n        if (window.FB) {\n          resolve();\n          return;\n        }\n        window.fbAsyncInit = function () {\n          window.FB.init({\n            appId: '611792801934261',\n            cookie: true,\n            xfbml: true,\n            version: 'v20.0'\n          });\n          window.FB.getLoginStatus(response => {\n            if (response.status === 'connected') {\n              fetchPages(response.authResponse.accessToken);\n            }\n          });\n          resolve();\n        };\n        if (!document.getElementById('facebook-jssdk')) {\n          const script = document.createElement('script');\n          script.id = 'facebook-jssdk';\n          script.src = 'https://connect.facebook.net/en_US/sdk.js';\n          script.async = true;\n          script.defer = true;\n          document.body.appendChild(script);\n        }\n      });\n    };\n    loadFacebookSDK().catch(error => {\n      setConnectionStatus('❌ Failed to load Facebook SDK');\n    });\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handlePageSelection = e => {\n    const pageId = e.target.value;\n    const page = pages.find(p => p.id === pageId);\n    setSelectedPage(page);\n    setPageAccessToken(page.access_token);\n  };\n  const loginWithFacebook = () => {\n    if (!window.FB) {\n      setConnectionStatus('❌ Facebook SDK not loaded. Please refresh the page.');\n      return;\n    }\n    if (window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {\n      setConnectionStatus('❌ Facebook login requires HTTPS.');\n      return;\n    }\n    setIsConnecting(true);\n    setConnectionStatus('🔐 Connecting to Facebook...');\n    window.FB.login(response => {\n      if (response.authResponse) {\n        setConnectionStatus('✅ Facebook login successful!');\n        fetchPages(response.authResponse.accessToken);\n      } else {\n        setConnectionStatus('❌ Facebook login cancelled');\n        setIsConnecting(false);\n      }\n    }, {\n      scope: 'pages_show_list,pages_read_engagement,pages_manage_posts,pages_manage_metadata'\n    });\n  };\n  const fetchPages = userAccessToken => {\n    setConnectionStatus('📄 Fetching Facebook pages...');\n    window.FB.api('/me/accounts', 'GET', {\n      access_token: userAccessToken\n    }, response => {\n      if (response.error) {\n        setConnectionStatus(`❌ Facebook API error: ${response.error.message}`);\n        setIsConnecting(false);\n        return;\n      }\n      if (response.data && response.data.length > 0) {\n        setPages(response.data);\n        const firstPage = response.data[0];\n        setSelectedPage(firstPage);\n        setPageAccessToken(firstPage.access_token);\n        setIsAuthenticated(true);\n        setConnectionStatus(`✅ Connected! Found ${response.data.length} page(s)`);\n      } else {\n        setConnectionStatus('❌ No Facebook pages found.');\n      }\n      setIsConnecting(false);\n    });\n  };\n  const handleFacebookConnect = async () => {\n    if (!isAuthenticated) {\n      loginWithFacebook();\n      return;\n    }\n    if (!formData.message.trim()) {\n      setConnectionStatus('❌ Please enter a message');\n      return;\n    }\n    if (!selectedPage || !pageAccessToken) {\n      setConnectionStatus('❌ Please select a Facebook page');\n      return;\n    }\n    try {\n      setIsConnecting(true);\n      setConnectionStatus('🚀 Posting to Facebook...');\n      const payload = {\n        pageAccessToken,\n        pageId: selectedPage.id,\n        pageName: selectedPage.name,\n        message: formData.message,\n        timestamp: new Date().toISOString(),\n        platform: 'facebook',\n        authenticated: true\n      };\n      const webhookResponse = await fetch(WEBHOOK_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      if (webhookResponse.ok) {\n        setConnectionStatus('✅ Message posted to Facebook successfully!');\n        setFormData({\n          message: ''\n        });\n      } else {\n        setConnectionStatus('❌ Failed to post to Facebook');\n      }\n    } catch (error) {\n      setConnectionStatus('❌ Connection error occurred');\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  const handleLogout = () => {\n    window.FB.logout(() => {\n      setIsAuthenticated(false);\n      setPages([]);\n      setSelectedPage(null);\n      setPageAccessToken('');\n      setConnectionStatus('👋 Logged out from Facebook');\n    });\n  };\n\n  // UI logic follows (platform rendering, input fields, etc.)\n  // Not changed unless specifically requested.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 10\n  }, this);\n}\n_s(SocialMediaPage, \"+ckWXczBbq10wdXEmZ0kkTdeZFc=\", false, function () {\n  return [useNavigate];\n});\n_c = SocialMediaPage;\nexport default SocialMediaPage;\nvar _c;\n$RefreshReg$(_c, \"SocialMediaPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","SocialMediaPage","_s","navigate","isConnecting","setIsConnecting","connectionStatus","setConnectionStatus","hoveredCard","setHoveredCard","pageAccessToken","setPageAccessToken","pages","setPages","selectedPage","setSelectedPage","isAuthenticated","setIsAuthenticated","formData","setFormData","message","WEBHOOK_URL","loadFacebookSDK","Promise","resolve","window","FB","fbAsyncInit","init","appId","cookie","xfbml","version","getLoginStatus","response","status","fetchPages","authResponse","accessToken","document","getElementById","script","createElement","id","src","async","defer","body","appendChild","catch","error","handleInputChange","e","name","value","target","prev","handlePageSelection","pageId","page","find","p","access_token","loginWithFacebook","location","protocol","hostname","login","scope","userAccessToken","api","data","length","firstPage","handleFacebookConnect","trim","payload","pageName","timestamp","Date","toISOString","platform","authenticated","webhookResponse","fetch","method","headers","JSON","stringify","ok","handleLogout","logout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/Projects/Automation Dashboard/frontend/src/components/SocialMediaPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './SocialMediaPage.css';\n\nfunction SocialMediaPage() {\n  const navigate = useNavigate();\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('');\n  const [hoveredCard, setHoveredCard] = useState(null);\n\n  const [pageAccessToken, setPageAccessToken] = useState('');\n  const [pages, setPages] = useState([]);\n  const [selectedPage, setSelectedPage] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [formData, setFormData] = useState({ message: '' });\n\n  const WEBHOOK_URL = \"https://hook.eu2.make.com/m4f3qzhwhe4y62i9ghviwe4zw23hytio\";\n\n  useEffect(() => {\n    const loadFacebookSDK = () => {\n      return new Promise((resolve) => {\n        if (window.FB) {\n          resolve();\n          return;\n        }\n\n        window.fbAsyncInit = function () {\n          window.FB.init({\n            appId: '611792801934261',\n            cookie: true,\n            xfbml: true,\n            version: 'v20.0'\n          });\n\n          window.FB.getLoginStatus((response) => {\n            if (response.status === 'connected') {\n              fetchPages(response.authResponse.accessToken);\n            }\n          });\n\n          resolve();\n        };\n\n        if (!document.getElementById('facebook-jssdk')) {\n          const script = document.createElement('script');\n          script.id = 'facebook-jssdk';\n          script.src = 'https://connect.facebook.net/en_US/sdk.js';\n          script.async = true;\n          script.defer = true;\n          document.body.appendChild(script);\n        }\n      });\n    };\n\n    loadFacebookSDK().catch(error => {\n      setConnectionStatus('❌ Failed to load Facebook SDK');\n    });\n  }, []);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handlePageSelection = (e) => {\n    const pageId = e.target.value;\n    const page = pages.find(p => p.id === pageId);\n    setSelectedPage(page);\n    setPageAccessToken(page.access_token);\n  };\n\n  const loginWithFacebook = () => {\n    if (!window.FB) {\n      setConnectionStatus('❌ Facebook SDK not loaded. Please refresh the page.');\n      return;\n    }\n\n    if (window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {\n      setConnectionStatus('❌ Facebook login requires HTTPS.');\n      return;\n    }\n\n    setIsConnecting(true);\n    setConnectionStatus('🔐 Connecting to Facebook...');\n\n    window.FB.login((response) => {\n      if (response.authResponse) {\n        setConnectionStatus('✅ Facebook login successful!');\n        fetchPages(response.authResponse.accessToken);\n      } else {\n        setConnectionStatus('❌ Facebook login cancelled');\n        setIsConnecting(false);\n      }\n    }, {\n      scope: 'pages_show_list,pages_read_engagement,pages_manage_posts,pages_manage_metadata'\n    });\n  };\n\n  const fetchPages = (userAccessToken) => {\n    setConnectionStatus('📄 Fetching Facebook pages...');\n\n    window.FB.api('/me/accounts', 'GET', { access_token: userAccessToken }, (response) => {\n      if (response.error) {\n        setConnectionStatus(`❌ Facebook API error: ${response.error.message}`);\n        setIsConnecting(false);\n        return;\n      }\n\n      if (response.data && response.data.length > 0) {\n        setPages(response.data);\n        const firstPage = response.data[0];\n        setSelectedPage(firstPage);\n        setPageAccessToken(firstPage.access_token);\n        setIsAuthenticated(true);\n        setConnectionStatus(`✅ Connected! Found ${response.data.length} page(s)`);\n      } else {\n        setConnectionStatus('❌ No Facebook pages found.');\n      }\n\n      setIsConnecting(false);\n    });\n  };\n\n  const handleFacebookConnect = async () => {\n    if (!isAuthenticated) {\n      loginWithFacebook();\n      return;\n    }\n\n    if (!formData.message.trim()) {\n      setConnectionStatus('❌ Please enter a message');\n      return;\n    }\n\n    if (!selectedPage || !pageAccessToken) {\n      setConnectionStatus('❌ Please select a Facebook page');\n      return;\n    }\n\n    try {\n      setIsConnecting(true);\n      setConnectionStatus('🚀 Posting to Facebook...');\n\n      const payload = {\n        pageAccessToken,\n        pageId: selectedPage.id,\n        pageName: selectedPage.name,\n        message: formData.message,\n        timestamp: new Date().toISOString(),\n        platform: 'facebook',\n        authenticated: true\n      };\n\n      const webhookResponse = await fetch(WEBHOOK_URL, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload)\n      });\n\n      if (webhookResponse.ok) {\n        setConnectionStatus('✅ Message posted to Facebook successfully!');\n        setFormData({ message: '' });\n      } else {\n        setConnectionStatus('❌ Failed to post to Facebook');\n      }\n    } catch (error) {\n      setConnectionStatus('❌ Connection error occurred');\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  const handleLogout = () => {\n    window.FB.logout(() => {\n      setIsAuthenticated(false);\n      setPages([]);\n      setSelectedPage(null);\n      setPageAccessToken('');\n      setConnectionStatus('👋 Logged out from Facebook');\n    });\n  };\n\n  // UI logic follows (platform rendering, input fields, etc.)\n  // Not changed unless specifically requested.\n\n  return <div> {/* Your existing layout code here */} </div>;\n}\n\nexport default SocialMediaPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}