{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\Automation Dashboard\\\\frontend\\\\src\\\\components\\\\InstagramPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport apiClient from '../services/apiClient';\nimport './SocialMediaPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InstagramPage = () => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [instagramAccounts, setInstagramAccounts] = useState([]);\n  const [selectedAccount, setSelectedAccount] = useState('');\n  const [postContent, setPostContent] = useState('');\n  const [postImage, setPostImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [sdkLoaded, setSdkLoaded] = useState(false);\n  const [fbAccessToken, setFbAccessToken] = useState(null);\n  const [generatingAI, setGeneratingAI] = useState(false);\n  const [userMedia, setUserMedia] = useState([]);\n  const [loadingMedia, setLoadingMedia] = useState(false);\n\n  // Instagram App ID (different from Facebook App ID)\n  const INSTAGRAM_APP_ID = process.env.REACT_APP_INSTAGRAM_APP_ID || '697225659875731';\n  useEffect(() => {\n    // Load Facebook SDK for Instagram\n    const loadFacebookSDK = () => {\n      if (window.FB) {\n        // If FB already exists, check if it's our Instagram app\n        const currentAppId = window.FB.getAppId();\n        if (currentAppId === INSTAGRAM_APP_ID) {\n          setSdkLoaded(true);\n          checkLoginStatus();\n        } else {\n          // Different app ID, reinitialize for Instagram\n          reinitializeForInstagram();\n        }\n        return;\n      }\n\n      // Load FB SDK for the first time\n      window.fbAsyncInit = function () {\n        window.FB.init({\n          appId: INSTAGRAM_APP_ID,\n          cookie: true,\n          xfbml: true,\n          version: 'v18.0'\n        });\n        setSdkLoaded(true);\n        checkLoginStatus();\n      };\n\n      // Load the SDK script\n      (function (d, s, id) {\n        var js,\n          fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) return;\n        js = d.createElement(s);\n        js.id = id;\n        js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      })(document, 'script', 'facebook-jssdk');\n    };\n    loadFacebookSDK();\n  }, [INSTAGRAM_APP_ID]);\n  const reinitializeForInstagram = () => {\n    // Reinitialize FB SDK with Instagram App ID\n    if (window.FB) {\n      window.FB.init({\n        appId: INSTAGRAM_APP_ID,\n        cookie: true,\n        xfbml: true,\n        version: 'v18.0'\n      });\n      setSdkLoaded(true);\n      checkLoginStatus();\n    }\n  };\n  const checkLoginStatus = () => {\n    if (!window.FB) return;\n    window.FB.getLoginStatus(response => {\n      if (response.status === 'connected') {\n        setFbAccessToken(response.authResponse.accessToken);\n        setMessage('Instagram: Using existing Facebook login session');\n        // Auto-connect Instagram accounts if we have a token\n        handleConnectInstagram(response.authResponse.accessToken);\n      }\n    });\n  };\n  const handleFacebookLogin = () => {\n    if (!window.FB) {\n      setMessage('Facebook SDK not loaded');\n      return;\n    }\n    setLoading(true);\n    setMessage('Initiating Instagram OAuth via Facebook...');\n\n    // Instagram requires specific permissions\n    window.FB.login(response => {\n      if (response.status === 'connected') {\n        const accessToken = response.authResponse.accessToken;\n        setFbAccessToken(accessToken);\n        setMessage('Facebook login successful! Connecting Instagram accounts...');\n        handleConnectInstagram(accessToken);\n      } else {\n        setMessage('Facebook login failed or was cancelled');\n        setLoading(false);\n      }\n    }, {\n      scope: 'pages_show_list,instagram_basic,instagram_content_publish,pages_read_engagement'\n    });\n  };\n  const handleConnectInstagram = async (accessToken = fbAccessToken) => {\n    if (!accessToken) {\n      setMessage('No access token available');\n      setLoading(false);\n      return;\n    }\n    try {\n      setMessage('Fetching Instagram Business accounts...');\n      const response = await apiClient.connectInstagram({\n        access_token: accessToken\n      });\n      if (response.success && response.instagram_accounts && response.instagram_accounts.length > 0) {\n        setInstagramAccounts(response.instagram_accounts);\n        setIsConnected(true);\n        setMessage(`Found ${response.instagram_accounts.length} Instagram Business account(s)!`);\n\n        // Auto-select first account if only one\n        if (response.instagram_accounts.length === 1) {\n          setSelectedAccount(response.instagram_accounts[0].id);\n        }\n      } else {\n        setMessage('No Instagram Business accounts found. Make sure you have an Instagram Business account connected to your Facebook Page.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Instagram connection error:', error);\n      setMessage(`Error connecting Instagram: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGenerateAIPost = async () => {\n    if (!selectedAccount) {\n      setMessage('Please select an Instagram account first');\n      return;\n    }\n    setGeneratingAI(true);\n    setMessage('Generating AI post...');\n    try {\n      const response = await apiClient.createInstagramPost({\n        instagram_user_id: selectedAccount,\n        access_token: fbAccessToken,\n        use_ai: true,\n        prompt: 'Create an engaging Instagram post'\n      });\n      if (response.success) {\n        setPostContent(response.ai_content || '');\n        setMessage('AI post generated successfully!');\n      } else {\n        setMessage(`Failed to generate AI post: ${response.error}`);\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('AI generation error:', error);\n      setMessage(`Error generating AI post: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || error.message}`);\n    } finally {\n      setGeneratingAI(false);\n    }\n  };\n  const handleCreatePost = async () => {\n    if (!selectedAccount || !postContent.trim()) {\n      setMessage('Please select an account and enter post content');\n      return;\n    }\n    setLoading(true);\n    setMessage('Creating Instagram post...');\n    try {\n      const formData = new FormData();\n      formData.append('instagram_user_id', selectedAccount);\n      formData.append('access_token', fbAccessToken);\n      formData.append('caption', postContent);\n      formData.append('use_ai', 'false');\n      if (postImage) {\n        formData.append('image', postImage);\n      }\n      const response = await apiClient.createInstagramPost(formData);\n      if (response.success) {\n        setMessage('Instagram post created successfully!');\n        setPostContent('');\n        setPostImage(null);\n        // Refresh media after posting\n        if (selectedAccount) {\n          loadUserMedia(selectedAccount);\n        }\n      } else {\n        setMessage(`Failed to create post: ${response.error}`);\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Post creation error:', error);\n      setMessage(`Error creating post: ${((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadUserMedia = async instagramUserId => {\n    setLoadingMedia(true);\n    try {\n      const media = await apiClient.getInstagramMedia(instagramUserId);\n      setUserMedia(media || []);\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Error loading media:', error);\n      setMessage(`Error loading media: ${((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.detail) || error.message}`);\n    } finally {\n      setLoadingMedia(false);\n    }\n  };\n  const handleAccountChange = accountId => {\n    setSelectedAccount(accountId);\n    if (accountId) {\n      loadUserMedia(accountId);\n    }\n  };\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setPostImage(file);\n    }\n  };\n  const handleLogout = () => {\n    if (window.FB) {\n      window.FB.logout(() => {\n        setIsConnected(false);\n        setInstagramAccounts([]);\n        setSelectedAccount('');\n        setFbAccessToken(null);\n        setUserMedia([]);\n        setMessage('Logged out successfully');\n      });\n    }\n  };\n  if (!sdkLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"social-media-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading Instagram SDK...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"social-media-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Instagram Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Connect and manage your Instagram Business accounts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.includes('Error') || message.includes('Failed') ? 'error' : 'success'}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), !isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Connect Instagram Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Connect your Instagram Business account through Facebook to start posting and managing content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFacebookLogin,\n        disabled: loading,\n        className: \"connect-button\",\n        children: loading ? 'Connecting...' : 'Connect Instagram via Facebook'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instagram-requirements\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Requirements:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Instagram Business or Creator account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Connected to a Facebook Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Admin access to the Facebook Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connected-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Instagram Accounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedAccount,\n          onChange: e => handleAccountChange(e.target.value),\n          className: \"account-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an Instagram account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), instagramAccounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: account.id,\n            children: [account.username, \" (\", account.name, \")\"]\n          }, account.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-button\",\n          children: \"Disconnect Instagram\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), selectedAccount && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"posting-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create Instagram Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"AI-Generated Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleGenerateAIPost,\n              disabled: generatingAI || loading,\n              className: \"ai-button\",\n              children: generatingAI ? 'Generating...' : 'Generate AI Post'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"manual-post-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Manual Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: postContent,\n              onChange: e => setPostContent(e.target.value),\n              placeholder: \"Enter your Instagram caption...\",\n              rows: \"4\",\n              className: \"post-textarea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-upload\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"image-upload\",\n                children: \"Choose Image:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"image-upload\",\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: handleImageChange,\n                className: \"file-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this), postImage && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-preview\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Selected: \", postImage.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCreatePost,\n              disabled: loading || !postContent.trim(),\n              className: \"post-button\",\n              children: loading ? 'Posting...' : 'Create Post'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Recent Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this), loadingMedia ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading\",\n            children: \"Loading media...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 19\n          }, this) : userMedia.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-grid\",\n            children: userMedia.slice(0, 12).map(media => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-item\",\n              children: [media.media_type === 'IMAGE' ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: media.media_url,\n                alt: \"Instagram post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 27\n              }, this) : media.media_type === 'VIDEO' ? /*#__PURE__*/_jsxDEV(\"video\", {\n                controls: true,\n                children: /*#__PURE__*/_jsxDEV(\"source\", {\n                  src: media.media_url,\n                  type: \"video/mp4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 27\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"media-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"media-caption\",\n                  children: media.caption ? media.caption.substring(0, 100) + '...' : 'No caption'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"media-date\",\n                  children: new Date(media.timestamp).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 25\n              }, this)]\n            }, media.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No media found for this account.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n_s(InstagramPage, \"eGefMEn68w2wkUk9n6X3/y98G2I=\");\n_c = InstagramPage;\nexport default InstagramPage;\nvar _c;\n$RefreshReg$(_c, \"InstagramPage\");","map":{"version":3,"names":["React","useState","useEffect","apiClient","jsxDEV","_jsxDEV","Fragment","_Fragment","InstagramPage","_s","isConnected","setIsConnected","instagramAccounts","setInstagramAccounts","selectedAccount","setSelectedAccount","postContent","setPostContent","postImage","setPostImage","loading","setLoading","message","setMessage","sdkLoaded","setSdkLoaded","fbAccessToken","setFbAccessToken","generatingAI","setGeneratingAI","userMedia","setUserMedia","loadingMedia","setLoadingMedia","INSTAGRAM_APP_ID","process","env","REACT_APP_INSTAGRAM_APP_ID","loadFacebookSDK","window","FB","currentAppId","getAppId","checkLoginStatus","reinitializeForInstagram","fbAsyncInit","init","appId","cookie","xfbml","version","d","s","id","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","getLoginStatus","response","status","authResponse","accessToken","handleConnectInstagram","handleFacebookLogin","login","scope","connectInstagram","access_token","success","instagram_accounts","length","error","_error$response","_error$response$data","console","data","detail","handleGenerateAIPost","createInstagramPost","instagram_user_id","use_ai","prompt","ai_content","_error$response2","_error$response2$data","handleCreatePost","trim","formData","FormData","append","loadUserMedia","_error$response3","_error$response3$data","instagramUserId","media","getInstagramMedia","_error$response4","_error$response4$data","handleAccountChange","accountId","handleImageChange","e","file","target","files","handleLogout","logout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","includes","onClick","disabled","value","onChange","map","account","username","name","placeholder","rows","htmlFor","type","accept","slice","media_type","media_url","alt","controls","caption","substring","Date","timestamp","toLocaleDateString","_c","$RefreshReg$"],"sources":["F:/Projects/Automation Dashboard/frontend/src/components/InstagramPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport apiClient from '../services/apiClient';\r\nimport './SocialMediaPage.css';\r\n\r\nconst InstagramPage = () => {\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [instagramAccounts, setInstagramAccounts] = useState([]);\r\n  const [selectedAccount, setSelectedAccount] = useState('');\r\n  const [postContent, setPostContent] = useState('');\r\n  const [postImage, setPostImage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [sdkLoaded, setSdkLoaded] = useState(false);\r\n  const [fbAccessToken, setFbAccessToken] = useState(null);\r\n  const [generatingAI, setGeneratingAI] = useState(false);\r\n  const [userMedia, setUserMedia] = useState([]);\r\n  const [loadingMedia, setLoadingMedia] = useState(false);\r\n\r\n  // Instagram App ID (different from Facebook App ID)\r\n  const INSTAGRAM_APP_ID = process.env.REACT_APP_INSTAGRAM_APP_ID || '697225659875731';\r\n\r\n  useEffect(() => {\r\n    // Load Facebook SDK for Instagram\r\n    const loadFacebookSDK = () => {\r\n      if (window.FB) {\r\n        // If FB already exists, check if it's our Instagram app\r\n        const currentAppId = window.FB.getAppId();\r\n        if (currentAppId === INSTAGRAM_APP_ID) {\r\n          setSdkLoaded(true);\r\n          checkLoginStatus();\r\n        } else {\r\n          // Different app ID, reinitialize for Instagram\r\n          reinitializeForInstagram();\r\n        }\r\n        return;\r\n      }\r\n\r\n      // Load FB SDK for the first time\r\n      window.fbAsyncInit = function() {\r\n        window.FB.init({\r\n          appId: INSTAGRAM_APP_ID,\r\n          cookie: true,\r\n          xfbml: true,\r\n          version: 'v18.0'\r\n        });\r\n        setSdkLoaded(true);\r\n        checkLoginStatus();\r\n      };\r\n\r\n      // Load the SDK script\r\n      (function(d, s, id) {\r\n        var js, fjs = d.getElementsByTagName(s)[0];\r\n        if (d.getElementById(id)) return;\r\n        js = d.createElement(s); js.id = id;\r\n        js.src = \"https://connect.facebook.net/en_US/sdk.js\";\r\n        fjs.parentNode.insertBefore(js, fjs);\r\n      }(document, 'script', 'facebook-jssdk'));\r\n    };\r\n\r\n    loadFacebookSDK();\r\n  }, [INSTAGRAM_APP_ID]);\r\n\r\n  const reinitializeForInstagram = () => {\r\n    // Reinitialize FB SDK with Instagram App ID\r\n    if (window.FB) {\r\n      window.FB.init({\r\n        appId: INSTAGRAM_APP_ID,\r\n        cookie: true,\r\n        xfbml: true,\r\n        version: 'v18.0'\r\n      });\r\n      setSdkLoaded(true);\r\n      checkLoginStatus();\r\n    }\r\n  };\r\n\r\n  const checkLoginStatus = () => {\r\n    if (!window.FB) return;\r\n    \r\n    window.FB.getLoginStatus((response) => {\r\n      if (response.status === 'connected') {\r\n        setFbAccessToken(response.authResponse.accessToken);\r\n        setMessage('Instagram: Using existing Facebook login session');\r\n        // Auto-connect Instagram accounts if we have a token\r\n        handleConnectInstagram(response.authResponse.accessToken);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleFacebookLogin = () => {\r\n    if (!window.FB) {\r\n      setMessage('Facebook SDK not loaded');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setMessage('Initiating Instagram OAuth via Facebook...');\r\n\r\n    // Instagram requires specific permissions\r\n    window.FB.login((response) => {\r\n      if (response.status === 'connected') {\r\n        const accessToken = response.authResponse.accessToken;\r\n        setFbAccessToken(accessToken);\r\n        setMessage('Facebook login successful! Connecting Instagram accounts...');\r\n        handleConnectInstagram(accessToken);\r\n      } else {\r\n        setMessage('Facebook login failed or was cancelled');\r\n        setLoading(false);\r\n      }\r\n    }, {\r\n      scope: 'pages_show_list,instagram_basic,instagram_content_publish,pages_read_engagement'\r\n    });\r\n  };\r\n\r\n  const handleConnectInstagram = async (accessToken = fbAccessToken) => {\r\n    if (!accessToken) {\r\n      setMessage('No access token available');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setMessage('Fetching Instagram Business accounts...');\r\n      \r\n      const response = await apiClient.connectInstagram({\r\n        access_token: accessToken\r\n      });\r\n\r\n      if (response.success && response.instagram_accounts && response.instagram_accounts.length > 0) {\r\n        setInstagramAccounts(response.instagram_accounts);\r\n        setIsConnected(true);\r\n        setMessage(`Found ${response.instagram_accounts.length} Instagram Business account(s)!`);\r\n        \r\n        // Auto-select first account if only one\r\n        if (response.instagram_accounts.length === 1) {\r\n          setSelectedAccount(response.instagram_accounts[0].id);\r\n        }\r\n      } else {\r\n        setMessage('No Instagram Business accounts found. Make sure you have an Instagram Business account connected to your Facebook Page.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Instagram connection error:', error);\r\n      setMessage(`Error connecting Instagram: ${error.response?.data?.detail || error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGenerateAIPost = async () => {\r\n    if (!selectedAccount) {\r\n      setMessage('Please select an Instagram account first');\r\n      return;\r\n    }\r\n\r\n    setGeneratingAI(true);\r\n    setMessage('Generating AI post...');\r\n\r\n    try {\r\n      const response = await apiClient.createInstagramPost({\r\n        instagram_user_id: selectedAccount,\r\n        access_token: fbAccessToken,\r\n        use_ai: true,\r\n        prompt: 'Create an engaging Instagram post'\r\n      });\r\n\r\n      if (response.success) {\r\n        setPostContent(response.ai_content || '');\r\n        setMessage('AI post generated successfully!');\r\n      } else {\r\n        setMessage(`Failed to generate AI post: ${response.error}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('AI generation error:', error);\r\n      setMessage(`Error generating AI post: ${error.response?.data?.detail || error.message}`);\r\n    } finally {\r\n      setGeneratingAI(false);\r\n    }\r\n  };\r\n\r\n  const handleCreatePost = async () => {\r\n    if (!selectedAccount || !postContent.trim()) {\r\n      setMessage('Please select an account and enter post content');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setMessage('Creating Instagram post...');\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('instagram_user_id', selectedAccount);\r\n      formData.append('access_token', fbAccessToken);\r\n      formData.append('caption', postContent);\r\n      formData.append('use_ai', 'false');\r\n\r\n      if (postImage) {\r\n        formData.append('image', postImage);\r\n      }\r\n\r\n      const response = await apiClient.createInstagramPost(formData);\r\n\r\n      if (response.success) {\r\n        setMessage('Instagram post created successfully!');\r\n        setPostContent('');\r\n        setPostImage(null);\r\n        // Refresh media after posting\r\n        if (selectedAccount) {\r\n          loadUserMedia(selectedAccount);\r\n        }\r\n      } else {\r\n        setMessage(`Failed to create post: ${response.error}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Post creation error:', error);\r\n      setMessage(`Error creating post: ${error.response?.data?.detail || error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadUserMedia = async (instagramUserId) => {\r\n    setLoadingMedia(true);\r\n    try {\r\n      const media = await apiClient.getInstagramMedia(instagramUserId);\r\n      setUserMedia(media || []);\r\n    } catch (error) {\r\n      console.error('Error loading media:', error);\r\n      setMessage(`Error loading media: ${error.response?.data?.detail || error.message}`);\r\n    } finally {\r\n      setLoadingMedia(false);\r\n    }\r\n  };\r\n\r\n  const handleAccountChange = (accountId) => {\r\n    setSelectedAccount(accountId);\r\n    if (accountId) {\r\n      loadUserMedia(accountId);\r\n    }\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setPostImage(file);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    if (window.FB) {\r\n      window.FB.logout(() => {\r\n        setIsConnected(false);\r\n        setInstagramAccounts([]);\r\n        setSelectedAccount('');\r\n        setFbAccessToken(null);\r\n        setUserMedia([]);\r\n        setMessage('Logged out successfully');\r\n      });\r\n    }\r\n  };\r\n\r\n  if (!sdkLoaded) {\r\n    return (\r\n      <div className=\"social-media-page\">\r\n        <div className=\"loading\">Loading Instagram SDK...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"social-media-page\">\r\n      <div className=\"page-header\">\r\n        <h1>Instagram Management</h1>\r\n        <p>Connect and manage your Instagram Business accounts</p>\r\n      </div>\r\n\r\n      {message && (\r\n        <div className={`message ${message.includes('Error') || message.includes('Failed') ? 'error' : 'success'}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      {!isConnected ? (\r\n        <div className=\"connection-section\">\r\n          <h2>Connect Instagram Account</h2>\r\n          <p>Connect your Instagram Business account through Facebook to start posting and managing content.</p>\r\n          <button \r\n            onClick={handleFacebookLogin} \r\n            disabled={loading}\r\n            className=\"connect-button\"\r\n          >\r\n            {loading ? 'Connecting...' : 'Connect Instagram via Facebook'}\r\n          </button>\r\n          <div className=\"instagram-requirements\">\r\n            <h3>Requirements:</h3>\r\n            <ul>\r\n              <li>Instagram Business or Creator account</li>\r\n              <li>Connected to a Facebook Page</li>\r\n              <li>Admin access to the Facebook Page</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"connected-section\">\r\n          <div className=\"account-selection\">\r\n            <h2>Instagram Accounts</h2>\r\n            <select \r\n              value={selectedAccount} \r\n              onChange={(e) => handleAccountChange(e.target.value)}\r\n              className=\"account-select\"\r\n            >\r\n              <option value=\"\">Select an Instagram account</option>\r\n              {instagramAccounts.map(account => (\r\n                <option key={account.id} value={account.id}>\r\n                  {account.username} ({account.name})\r\n                </option>\r\n              ))}\r\n            </select>\r\n            \r\n            <button onClick={handleLogout} className=\"logout-button\">\r\n              Disconnect Instagram\r\n            </button>\r\n          </div>\r\n\r\n          {selectedAccount && (\r\n            <>\r\n              <div className=\"posting-section\">\r\n                <h2>Create Instagram Post</h2>\r\n                \r\n                <div className=\"ai-section\">\r\n                  <h3>AI-Generated Post</h3>\r\n                  <button \r\n                    onClick={handleGenerateAIPost}\r\n                    disabled={generatingAI || loading}\r\n                    className=\"ai-button\"\r\n                  >\r\n                    {generatingAI ? 'Generating...' : 'Generate AI Post'}\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"manual-post-section\">\r\n                  <h3>Manual Post</h3>\r\n                  <textarea\r\n                    value={postContent}\r\n                    onChange={(e) => setPostContent(e.target.value)}\r\n                    placeholder=\"Enter your Instagram caption...\"\r\n                    rows=\"4\"\r\n                    className=\"post-textarea\"\r\n                  />\r\n                  \r\n                  <div className=\"image-upload\">\r\n                    <label htmlFor=\"image-upload\">Choose Image:</label>\r\n                    <input\r\n                      id=\"image-upload\"\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      onChange={handleImageChange}\r\n                      className=\"file-input\"\r\n                    />\r\n                    {postImage && (\r\n                      <div className=\"image-preview\">\r\n                        <p>Selected: {postImage.name}</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <button \r\n                    onClick={handleCreatePost}\r\n                    disabled={loading || !postContent.trim()}\r\n                    className=\"post-button\"\r\n                  >\r\n                    {loading ? 'Posting...' : 'Create Post'}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"media-section\">\r\n                <h2>Recent Posts</h2>\r\n                {loadingMedia ? (\r\n                  <div className=\"loading\">Loading media...</div>\r\n                ) : userMedia.length > 0 ? (\r\n                  <div className=\"media-grid\">\r\n                    {userMedia.slice(0, 12).map((media) => (\r\n                      <div key={media.id} className=\"media-item\">\r\n                        {media.media_type === 'IMAGE' ? (\r\n                          <img src={media.media_url} alt=\"Instagram post\" />\r\n                        ) : media.media_type === 'VIDEO' ? (\r\n                          <video controls>\r\n                            <source src={media.media_url} type=\"video/mp4\" />\r\n                          </video>\r\n                        ) : null}\r\n                        <div className=\"media-info\">\r\n                          <p className=\"media-caption\">\r\n                            {media.caption ? media.caption.substring(0, 100) + '...' : 'No caption'}\r\n                          </p>\r\n                          <p className=\"media-date\">\r\n                            {new Date(media.timestamp).toLocaleDateString()}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <p>No media found for this account.</p>\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstagramPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}